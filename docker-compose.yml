version: '3.8'
services:
  postgres:
    image: postgres:15.4
    container_name: ${POSTGRES_CONTAINER_NAME}
    environment:
      POSTGRES_DB_NAME: ${POSTGRES_DB_NAME}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U hoov"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:alpine
    container_name: redis-stack
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  rails:
    build:
      context: ./hoov-rails # Local repo cloned by GitHub Actions
      dockerfile: Dockerfile
    environment:
      DATABASE_URL: postgres://$POSTGRES_USER:$POSTGRES_PASSWORD@postgres:5432/$POSTGRES_DB_NAME
      REDIS_URL: redis://redis:6379/1
    depends_on:
      - postgres
      - redis
    command: bundle exec puma -C config/puma.rb

  nextjs:
    image: node:16
    build:
      context: ./hoov-web # Local repo cloned by GitHub Actions
      dockerfile: Dockerfile
    environment:
      NODE_ENV: ${NODE_ENV}
    depends_on:
      - rails
    command: npm run start

  nginx:
    image: nginx:alpine
    environment:
      BASE_DOMAIN: ${BASE_DOMAIN}
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
    ports:
      - "80:80"
    depends_on:
      - rails
      - nextjs

volumes:
  postgres_data:
